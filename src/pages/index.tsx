import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { SignInButton, SignOutButton, auth, useUser } from "@clerk/nextjs";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relateTime from "dayjs/plugin/relativeTime";
import LoadingPage from "~/components/loading";

dayjs.extend(relateTime);

function PostWizard() {
  const { isSignedIn, user } = useUser();

  console.log(user);

  if (!isSignedIn) {
    return null;
  }

  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.imageUrl}
        alt="Profile image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input
        placeholder="Type something here!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

function PostView(props: PostWithUser) {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-4 border-b border-slate-400 p-4">
      <Image
        src={author.imageUrl}
        alt={`@${author.username}'s profile picture`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col font-bold">
        <div>
          <span>{`@${author.username}`}</span> <span> Î‡ </span>{" "}
          <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span className="text-xl">{post.content}</span>
      </div>
    </div>
  );
}

function Feed() {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) {
    return <LoadingPage />;
  }

  if (!data) {
    return <div>Something went wrong!</div>;
  }

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
}

export default function Home() {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  // Start fetching posts 
  api.posts.getAll.useQuery();

  // Return empty div if user is not loaded and posts are not loaded
  if (!userLoaded) {
    return <div></div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x-2 border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {isSignedIn && <PostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
}
